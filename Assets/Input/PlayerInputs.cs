//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Input/PlayerInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputs: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputs"",
    ""maps"": [
        {
            ""name"": ""Player1"",
            ""id"": ""b71dd1cc-5038-40c5-8208-6d4b67a88ad9"",
            ""actions"": [
                {
                    ""name"": ""Vertical"",
                    ""type"": ""Value"",
                    ""id"": ""9176bd1f-4fc0-4ee0-adf1-a5619e11d63e"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Horizontal"",
                    ""type"": ""Value"",
                    ""id"": ""11701bf8-0c5b-431d-8f0e-494af6eeab07"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ButtonA"",
                    ""type"": ""Button"",
                    ""id"": ""a24f4daf-64ea-476b-a3ac-df08eaf1cec3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ButtonB"",
                    ""type"": ""Button"",
                    ""id"": ""f2773a74-8667-4004-99df-d1ada03f06d9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ButtonC"",
                    ""type"": ""Button"",
                    ""id"": ""0b6c5a5c-a55a-4c1d-b905-f11a4791553a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""e28aa582-5016-414a-bc7d-a108346e11a6"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""f3d88139-afcb-4a23-93cd-65e13cfa1f96"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""ab9f8c35-aa25-4911-8c86-eb2e994bc95e"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""23ed3c11-2132-4c2d-8475-a05222c372aa"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""20f303f4-1802-41ed-bf58-e3918ccb019f"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""0e61857f-102c-4889-b525-778130da9754"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""fbf8d7e4-de4c-4b12-92e1-8ed272bf8781"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ButtonA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c1fb2cf1-aebb-4f30-bb60-eba0bfc911b8"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ButtonB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6c1ebb8a-f3ef-433e-aae4-39744269f4ab"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ButtonC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Player2"",
            ""id"": ""0862bacb-37ef-451f-b786-4d54dcfec2ab"",
            ""actions"": [
                {
                    ""name"": ""Vertical"",
                    ""type"": ""Value"",
                    ""id"": ""8493a5f2-dbbd-41dc-85d2-36e134380cc7"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Horizontal"",
                    ""type"": ""Value"",
                    ""id"": ""70fc33b7-673f-4c41-a9ca-fa1312eef005"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ButtonA"",
                    ""type"": ""Button"",
                    ""id"": ""e775ead3-689c-4530-9ea5-d75f28d6a5a6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ButtonB"",
                    ""type"": ""Button"",
                    ""id"": ""a44811cc-0b23-4cd4-8238-ad8bfcd834aa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ButtonC"",
                    ""type"": ""Button"",
                    ""id"": ""3127b1af-5da8-4686-9cd1-31bddb055a0f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""57e11fa3-7edb-4721-9081-1226ae6944ac"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""e4b74183-df68-4e9f-8779-6567153ad99e"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""180282ae-b6b1-4a85-a7fc-5f4032455b0a"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""d91df334-7883-451e-9a00-f260c63ec67a"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""bcb79b00-eb34-4197-9e4a-9c1f956bf2e4"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""c85cf090-f3c7-4603-96bb-e434387d9230"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""ff8971cd-af60-4254-ac4b-8a2882a3c0e5"",
                    ""path"": ""<Keyboard>/numpad1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ButtonA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a8e3c7a0-c17f-468a-aa20-2d2e4de023e0"",
                    ""path"": ""<Keyboard>/numpad2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ButtonB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d141aa29-1b46-4dc0-8319-eb08f1cf84a6"",
                    ""path"": ""<Keyboard>/numpad3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ButtonC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Rollback"",
            ""id"": ""563c9043-87e0-4563-8f88-041fde188e50"",
            ""actions"": [
                {
                    ""name"": ""Save_State"",
                    ""type"": ""Button"",
                    ""id"": ""5e38ce57-4289-4f81-a62d-bdfb305fe85f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Load_State"",
                    ""type"": ""Button"",
                    ""id"": ""1b6afa41-0302-4d96-a865-6edbeca709a7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""7879bee0-4202-4b48-903c-541b3bf5daae"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Save_State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""550c974e-5585-4f93-b58d-8aefa3f5216a"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Load_State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player1
        m_Player1 = asset.FindActionMap("Player1", throwIfNotFound: true);
        m_Player1_Vertical = m_Player1.FindAction("Vertical", throwIfNotFound: true);
        m_Player1_Horizontal = m_Player1.FindAction("Horizontal", throwIfNotFound: true);
        m_Player1_ButtonA = m_Player1.FindAction("ButtonA", throwIfNotFound: true);
        m_Player1_ButtonB = m_Player1.FindAction("ButtonB", throwIfNotFound: true);
        m_Player1_ButtonC = m_Player1.FindAction("ButtonC", throwIfNotFound: true);
        // Player2
        m_Player2 = asset.FindActionMap("Player2", throwIfNotFound: true);
        m_Player2_Vertical = m_Player2.FindAction("Vertical", throwIfNotFound: true);
        m_Player2_Horizontal = m_Player2.FindAction("Horizontal", throwIfNotFound: true);
        m_Player2_ButtonA = m_Player2.FindAction("ButtonA", throwIfNotFound: true);
        m_Player2_ButtonB = m_Player2.FindAction("ButtonB", throwIfNotFound: true);
        m_Player2_ButtonC = m_Player2.FindAction("ButtonC", throwIfNotFound: true);
        // Rollback
        m_Rollback = asset.FindActionMap("Rollback", throwIfNotFound: true);
        m_Rollback_Save_State = m_Rollback.FindAction("Save_State", throwIfNotFound: true);
        m_Rollback_Load_State = m_Rollback.FindAction("Load_State", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player1
    private readonly InputActionMap m_Player1;
    private List<IPlayer1Actions> m_Player1ActionsCallbackInterfaces = new List<IPlayer1Actions>();
    private readonly InputAction m_Player1_Vertical;
    private readonly InputAction m_Player1_Horizontal;
    private readonly InputAction m_Player1_ButtonA;
    private readonly InputAction m_Player1_ButtonB;
    private readonly InputAction m_Player1_ButtonC;
    public struct Player1Actions
    {
        private @PlayerInputs m_Wrapper;
        public Player1Actions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Vertical => m_Wrapper.m_Player1_Vertical;
        public InputAction @Horizontal => m_Wrapper.m_Player1_Horizontal;
        public InputAction @ButtonA => m_Wrapper.m_Player1_ButtonA;
        public InputAction @ButtonB => m_Wrapper.m_Player1_ButtonB;
        public InputAction @ButtonC => m_Wrapper.m_Player1_ButtonC;
        public InputActionMap Get() { return m_Wrapper.m_Player1; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Player1Actions set) { return set.Get(); }
        public void AddCallbacks(IPlayer1Actions instance)
        {
            if (instance == null || m_Wrapper.m_Player1ActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_Player1ActionsCallbackInterfaces.Add(instance);
            @Vertical.started += instance.OnVertical;
            @Vertical.performed += instance.OnVertical;
            @Vertical.canceled += instance.OnVertical;
            @Horizontal.started += instance.OnHorizontal;
            @Horizontal.performed += instance.OnHorizontal;
            @Horizontal.canceled += instance.OnHorizontal;
            @ButtonA.started += instance.OnButtonA;
            @ButtonA.performed += instance.OnButtonA;
            @ButtonA.canceled += instance.OnButtonA;
            @ButtonB.started += instance.OnButtonB;
            @ButtonB.performed += instance.OnButtonB;
            @ButtonB.canceled += instance.OnButtonB;
            @ButtonC.started += instance.OnButtonC;
            @ButtonC.performed += instance.OnButtonC;
            @ButtonC.canceled += instance.OnButtonC;
        }

        private void UnregisterCallbacks(IPlayer1Actions instance)
        {
            @Vertical.started -= instance.OnVertical;
            @Vertical.performed -= instance.OnVertical;
            @Vertical.canceled -= instance.OnVertical;
            @Horizontal.started -= instance.OnHorizontal;
            @Horizontal.performed -= instance.OnHorizontal;
            @Horizontal.canceled -= instance.OnHorizontal;
            @ButtonA.started -= instance.OnButtonA;
            @ButtonA.performed -= instance.OnButtonA;
            @ButtonA.canceled -= instance.OnButtonA;
            @ButtonB.started -= instance.OnButtonB;
            @ButtonB.performed -= instance.OnButtonB;
            @ButtonB.canceled -= instance.OnButtonB;
            @ButtonC.started -= instance.OnButtonC;
            @ButtonC.performed -= instance.OnButtonC;
            @ButtonC.canceled -= instance.OnButtonC;
        }

        public void RemoveCallbacks(IPlayer1Actions instance)
        {
            if (m_Wrapper.m_Player1ActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayer1Actions instance)
        {
            foreach (var item in m_Wrapper.m_Player1ActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_Player1ActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public Player1Actions @Player1 => new Player1Actions(this);

    // Player2
    private readonly InputActionMap m_Player2;
    private List<IPlayer2Actions> m_Player2ActionsCallbackInterfaces = new List<IPlayer2Actions>();
    private readonly InputAction m_Player2_Vertical;
    private readonly InputAction m_Player2_Horizontal;
    private readonly InputAction m_Player2_ButtonA;
    private readonly InputAction m_Player2_ButtonB;
    private readonly InputAction m_Player2_ButtonC;
    public struct Player2Actions
    {
        private @PlayerInputs m_Wrapper;
        public Player2Actions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Vertical => m_Wrapper.m_Player2_Vertical;
        public InputAction @Horizontal => m_Wrapper.m_Player2_Horizontal;
        public InputAction @ButtonA => m_Wrapper.m_Player2_ButtonA;
        public InputAction @ButtonB => m_Wrapper.m_Player2_ButtonB;
        public InputAction @ButtonC => m_Wrapper.m_Player2_ButtonC;
        public InputActionMap Get() { return m_Wrapper.m_Player2; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Player2Actions set) { return set.Get(); }
        public void AddCallbacks(IPlayer2Actions instance)
        {
            if (instance == null || m_Wrapper.m_Player2ActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_Player2ActionsCallbackInterfaces.Add(instance);
            @Vertical.started += instance.OnVertical;
            @Vertical.performed += instance.OnVertical;
            @Vertical.canceled += instance.OnVertical;
            @Horizontal.started += instance.OnHorizontal;
            @Horizontal.performed += instance.OnHorizontal;
            @Horizontal.canceled += instance.OnHorizontal;
            @ButtonA.started += instance.OnButtonA;
            @ButtonA.performed += instance.OnButtonA;
            @ButtonA.canceled += instance.OnButtonA;
            @ButtonB.started += instance.OnButtonB;
            @ButtonB.performed += instance.OnButtonB;
            @ButtonB.canceled += instance.OnButtonB;
            @ButtonC.started += instance.OnButtonC;
            @ButtonC.performed += instance.OnButtonC;
            @ButtonC.canceled += instance.OnButtonC;
        }

        private void UnregisterCallbacks(IPlayer2Actions instance)
        {
            @Vertical.started -= instance.OnVertical;
            @Vertical.performed -= instance.OnVertical;
            @Vertical.canceled -= instance.OnVertical;
            @Horizontal.started -= instance.OnHorizontal;
            @Horizontal.performed -= instance.OnHorizontal;
            @Horizontal.canceled -= instance.OnHorizontal;
            @ButtonA.started -= instance.OnButtonA;
            @ButtonA.performed -= instance.OnButtonA;
            @ButtonA.canceled -= instance.OnButtonA;
            @ButtonB.started -= instance.OnButtonB;
            @ButtonB.performed -= instance.OnButtonB;
            @ButtonB.canceled -= instance.OnButtonB;
            @ButtonC.started -= instance.OnButtonC;
            @ButtonC.performed -= instance.OnButtonC;
            @ButtonC.canceled -= instance.OnButtonC;
        }

        public void RemoveCallbacks(IPlayer2Actions instance)
        {
            if (m_Wrapper.m_Player2ActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayer2Actions instance)
        {
            foreach (var item in m_Wrapper.m_Player2ActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_Player2ActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public Player2Actions @Player2 => new Player2Actions(this);

    // Rollback
    private readonly InputActionMap m_Rollback;
    private List<IRollbackActions> m_RollbackActionsCallbackInterfaces = new List<IRollbackActions>();
    private readonly InputAction m_Rollback_Save_State;
    private readonly InputAction m_Rollback_Load_State;
    public struct RollbackActions
    {
        private @PlayerInputs m_Wrapper;
        public RollbackActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Save_State => m_Wrapper.m_Rollback_Save_State;
        public InputAction @Load_State => m_Wrapper.m_Rollback_Load_State;
        public InputActionMap Get() { return m_Wrapper.m_Rollback; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RollbackActions set) { return set.Get(); }
        public void AddCallbacks(IRollbackActions instance)
        {
            if (instance == null || m_Wrapper.m_RollbackActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_RollbackActionsCallbackInterfaces.Add(instance);
            @Save_State.started += instance.OnSave_State;
            @Save_State.performed += instance.OnSave_State;
            @Save_State.canceled += instance.OnSave_State;
            @Load_State.started += instance.OnLoad_State;
            @Load_State.performed += instance.OnLoad_State;
            @Load_State.canceled += instance.OnLoad_State;
        }

        private void UnregisterCallbacks(IRollbackActions instance)
        {
            @Save_State.started -= instance.OnSave_State;
            @Save_State.performed -= instance.OnSave_State;
            @Save_State.canceled -= instance.OnSave_State;
            @Load_State.started -= instance.OnLoad_State;
            @Load_State.performed -= instance.OnLoad_State;
            @Load_State.canceled -= instance.OnLoad_State;
        }

        public void RemoveCallbacks(IRollbackActions instance)
        {
            if (m_Wrapper.m_RollbackActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IRollbackActions instance)
        {
            foreach (var item in m_Wrapper.m_RollbackActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_RollbackActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public RollbackActions @Rollback => new RollbackActions(this);
    public interface IPlayer1Actions
    {
        void OnVertical(InputAction.CallbackContext context);
        void OnHorizontal(InputAction.CallbackContext context);
        void OnButtonA(InputAction.CallbackContext context);
        void OnButtonB(InputAction.CallbackContext context);
        void OnButtonC(InputAction.CallbackContext context);
    }
    public interface IPlayer2Actions
    {
        void OnVertical(InputAction.CallbackContext context);
        void OnHorizontal(InputAction.CallbackContext context);
        void OnButtonA(InputAction.CallbackContext context);
        void OnButtonB(InputAction.CallbackContext context);
        void OnButtonC(InputAction.CallbackContext context);
    }
    public interface IRollbackActions
    {
        void OnSave_State(InputAction.CallbackContext context);
        void OnLoad_State(InputAction.CallbackContext context);
    }
}
